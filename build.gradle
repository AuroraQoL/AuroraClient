buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://repo.sk1er.club/repository/maven-public" }
    }
    dependencies {
        classpath "com.github.Skytils:ForgeGradle:41dfce0a70"
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
        classpath "com.github.debuggingss:MixinGradle:0.6-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "org.spongepowered.mixin"

version = "3.1.0"
group= "me.aurora.client"
archivesBaseName = "AuroraClient"


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    replace "@VERSION@": project.version
    clientRunArgs += "--mixin mixins.aurora.json"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
    maven { url = "https://repo.sk1er.club/repository/maven-public/" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
}

dependencies {
    implementation 'net.objecthunter:exp4j:0.4.8'
    implementation "gg.essential:loader-launchwrapper:1.1.3"
    implementation "gg.essential:essential-1.8.9-forge:2666"
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation('org.spongepowered:mixin:0.7.11-SNAPSHOT')
    annotationProcessor('org.spongepowered:mixin:0.7.11-SNAPSHOT')
}

mixin {
    add sourceSets.main, "mixins.aurora.refmap.json"
    defaultObfuscationEnv searge

}

jar {
    manifest {
        attributes("TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker")
        attributes("MixinConfigs": "mixins.aurora.json")
    }
}

shadowJar {
    dependencies {
        include(dependency("gg.essential:loader-launchwrapper:1.1.3"))
        include(dependency("net.objecthunter:exp4j:0.4.8"))
        include(dependency("org.spongepowered:mixin:0.7.11-SNAPSHOT"))
    }
    archiveFileName = "bin.jar"
}

reobfJar.dependsOn tasks.shadowJar

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    from(file("LICENSE"))
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
        mappingType = 'SEARGE'
    }
}

sourceSets { main { output.resourcesDir = java.classesDirectory } }